// <auto-generated />
using System;
using BuscaPersonalApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BuscaPersonalApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BuscaPersonalApi.Entities.AcademiaEntity", b =>
                {
                    b.Property<int>("Aca_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Aca_id"));

                    b.Property<bool>("Aca_ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Aca_bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Aca_cep")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Aca_cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Aca_cnpj")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aca_confirmado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Aca_data_cadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Aca_email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Aca_endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Aca_estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Aca_nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Aca_senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Aca_telefone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Aca_id");

                    b.ToTable("Academia");
                });

            modelBuilder.Entity("BuscaPersonalApi.Entities.AcademiaPersonalEntity", b =>
                {
                    b.Property<int>("Acaper_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Acaper_id"));

                    b.Property<int>("Aca_id")
                        .HasColumnType("integer");

                    b.Property<int>("AcademiaAca_id")
                        .HasColumnType("integer");

                    b.Property<bool>("Acaper_ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Acaper_data_cadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Per_id")
                        .HasColumnType("integer");

                    b.Property<int>("PersonalPer_id")
                        .HasColumnType("integer");

                    b.HasKey("Acaper_id");

                    b.HasIndex("AcademiaAca_id");

                    b.HasIndex("PersonalPer_id");

                    b.ToTable("AcademiaPersonal");
                });

            modelBuilder.Entity("BuscaPersonalApi.Entities.PersonalEntity", b =>
                {
                    b.Property<int>("Per_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Per_id"));

                    b.Property<bool>("Per_ativo")
                        .HasColumnType("boolean");

                    b.Property<bool>("Per_confirmado")
                        .HasColumnType("boolean");

                    b.Property<string>("Per_cpf")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Per_cref")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Per_data_cadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("Per_data_nascimento")
                        .HasColumnType("date");

                    b.Property<string>("Per_email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Per_especialidades")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Per_nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Per_senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Per_telefone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Per_id");

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("BuscaPersonalApi.Entities.AcademiaPersonalEntity", b =>
                {
                    b.HasOne("BuscaPersonalApi.Entities.AcademiaEntity", "Academia")
                        .WithMany("AcademiaPersonal")
                        .HasForeignKey("AcademiaAca_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuscaPersonalApi.Entities.PersonalEntity", "Personal")
                        .WithMany("AcademiaPersonal")
                        .HasForeignKey("PersonalPer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academia");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("BuscaPersonalApi.Entities.AcademiaEntity", b =>
                {
                    b.Navigation("AcademiaPersonal");
                });

            modelBuilder.Entity("BuscaPersonalApi.Entities.PersonalEntity", b =>
                {
                    b.Navigation("AcademiaPersonal");
                });
#pragma warning restore 612, 618
        }
    }
}
